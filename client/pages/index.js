import React, { useState, useEffect } from 'react';
import Head from 'next/head';
import { getMenu } from '../services/apiServices';
import styles from '../styles/Home.module.css';
import MenuList from '../component/MenuList';
import DropdownMenuList from '../component/DropdownMenuList';

const Home = () => {
  const [menu, setMenu] = useState([]);
  const [filteredFlag, setFilteredFlag] = useState(0);
  const [filteredMenu, setFilteredMenu] = useState([]);
  const [ingredients, setIngredients] = useState([]);
  const [filteredIngredient, setFilteredIngredient] = useState('');

  useEffect(async () => {
    const temp = await getMenu();
    if (temp.length) {
      setMenu(temp);
      setFilteredMenu(temp);
      getIngredients(temp)
    }
  }, []);

  const onChange = (e) => {
    let search = e.target.value;
    if (search.trim() === '' && filteredFlag === 0) return setFilteredMenu(menu);
    else if (search.trim() !== '' && filteredFlag === 1) {
      if (filteredMenu.length !== 0) {
        const filteredMenuByIngredient = menu.filter( (element) => {
          if(element.ingredients.includes(filteredIngredient)) return element;
        })
        let filteredTitle = filteredMenuByIngredient.filter( (element) => {
          if (element.title.toLowerCase().includes(search.toLowerCase())) return element;
        })
        setFilteredMenu(filteredTitle);
      } 
    }
    else {
      let filteredTitle = filteredMenu.filter( (element) => {
        if (element.title.toLowerCase().includes(search.toLowerCase())) return element;
      })
      setFilteredMenu(filteredTitle);
    }
  };

  const getIngredients = (menu) => {
    let temp = ['none']; 
    menu.map( element => {
      temp.push(...element.ingredients);
    });
    setIngredients([...new Set(temp)]);
  };

  const handleClick = (e) => {
    const temp = e.target.innerText;
    setFilteredIngredient(temp)
    if (filteredMenu.length !== 0 && temp !== 'none') {
      const filteredMenuByIngredient = filteredMenu.filter( (element) => {
        setFilteredFlag(1)
        if(element.ingredients.includes(temp)) return element;
      })
      setFilteredMenu(filteredMenuByIngredient);
    } else {
      setFilteredFlag(0);
      setFilteredMenu(menu);
    }
  };

  return (
    <div>
      <div className={styles.container}>
        <Head>
          <title>The Deck</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
        <img src="https://images.unsplash.com/photo-1572843540747-22eea9bcfa6b?
          ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=967&q=80" 
          className = {styles.image}/>
        <table className={styles.heading}>
          <thead>
            <tr>
              <td>
                <input type="text" placeholder="Search..." onChange={onChange}/>
              </td>
              <td>
                <DropdownMenuList ingredients={ingredients} handleClick={handleClick}/>
              </td>
            </tr>
            <tr>
              <th className={styles.data}><h3>Title</h3></th>
              <th className={styles.data}><h3>Ingredients</h3></th>
            </tr>
          </thead>
        </table>
        <MenuList filteredMenu = {filteredMenu}/>
      </div>
    </div>
  )
};

export default Home;
